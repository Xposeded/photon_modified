profile.low    = INFO=0 shadowMapResolution=1024  SHADOW_PCF !SHADOW_COLOR !SHADOW_VPS !ENTITY_SHADOWS !BLOCK_ENTITY_SHADOWS !ENVIRONMENT_REFLECTIONS !GTAO !VL !AIR_FOG_COLORED_LIGHT_SHAFTS !WATER_CAUSTICS !WATER_PARALLAX
profile.medium = INFO=1 shadowMapResolution=2048  SHADOW_PCF !SHADOW_COLOR  SHADOW_VPS !ENTITY_SHADOWS !BLOCK_ENTITY_SHADOWS !ENVIRONMENT_REFLECTIONS !GTAO  VL !AIR_FOG_COLORED_LIGHT_SHAFTS !WATER_CAUSTICS !WATER_PARALLAX
profile.high   = INFO=2 shadowMapResolution=2048  SHADOW_PCF  SHADOW_COLOR  SHADOW_VPS  ENTITY_SHADOWS !BLOCK_ENTITY_SHADOWS  ENVIRONMENT_REFLECTIONS  GTAO  VL !AIR_FOG_COLORED_LIGHT_SHAFTS !WATER_CAUSTICS  WATER_PARALLAX
profile.ultra  = INFO=3 shadowMapResolution=4096  SHADOW_PCF  SHADOW_COLOR  SHADOW_VPS  ENTITY_SHADOWS  BLOCK_ENTITY_SHADOWS  ENVIRONMENT_REFLECTIONS  GTAO  VL  AIR_FOG_COLORED_LIGHT_SHAFTS  WATER_CAUSTICS  WATER_PARALLAX

#--------------------------------------------------------------------------------------------------#

screen              = INFO <profile> <empty> <empty> [world] [lighting] [sky] [fog] [materials] [water] [post] [misc]

screen.world        = [weather] <empty> WAVING_PLANTS WAVING_LEAVES EDGE_HIGHLIGHT EDGE_HIGHLIGHT_SCALE SLANTED_RAIN RAIN_OPACITY SEA_LEVEL
screen.lighting     = [light_sources] [shadows] <empty> <empty> GTAO VANILLA_AO AO_IN_SUNLIGHT SH_SKYLIGHT SSS_SHEEN SSS_INTENSITY SHADING_STRENGTH HELD_LIGHTING
screen.sky          = [clouds] <empty> VANILLA_SUN VANILLA_MOON SUN_ANGULAR_RADIUS MOON_ANGULAR_RADIUS SKY_GROUND STARS STARS_INTENSITY STARS_COVERAGE
screen.fog          = VL VL_RENDER_SCALE AIR_FOG_CLOUDY_NOISE AIR_FOG_COLORED_LIGHT_SHAFTS <empty> <empty> [fog_rlh] [fog_mie] <empty> <empty> BORDER_FOG CAVE_FOG BLOOMY_FOG BLOOMY_FOG_INTENSITY NETHER_FOG_INTENSITY
screen.materials    = NORMAL_MAPPING SPECULAR_MAPPING POM [rp_settings] <empty> <empty> HARDCODED_SPECULAR HARDCODED_EMISSION HARDCODED_SSS RAIN_PUDDLES <empty> <empty> [reflections]
screen.water        = [water_waves] [water_fog_coeff] WATER_CAUSTICS WATER_FOAM SNELLS_WINDOW WATER_TEXTURE BIOME_WATER_COLOR WATER_REFRACTION WATER_REFRACTION_INTENSITY
screen.post         = [color_grading] [exposure] BLOOM BLOOM_INTENSITY DOF DOF_INTENSITY DOF_SAMPLES DOF_FOCUS MOTION_BLUR MOTION_BLUR_INTENSITY TAA FXAA TAAU TAAU_RENDER_SCALE CAS CAS_INTENSITY VIGNETTE VIGNETTE_INTENSITY
screen.misc         = DEBUG_VIEW DEBUG_SAMPLER WHITE_WORLD FANCY_NETHER_PORTAL CUSTOM_SKY CUSTOM_SKY_BRIGHTNESS TONEMAP_COMPARISON tonemap_left tonemap_right

screen.weather         = WEATHER_DAY <empty> [weather_d0] [weather_d1] [weather_d2] [weather_d3] [weather_d4] [weather_d5] [weather_d6] [weather_d7] [weather_d8] [weather_d9] [weather_d10] [weather_d11]
screen.clouds          = CLOUDS_TEMPORAL_UPSCALING CLOUDS_DAILY_WEATHER <empty> <empty> CLOUDS_CU [clouds_cumulus] CLOUDS_AC [clouds_altocumulus] CLOUDS_CI [clouds_cirrus] <empty> <empty> BLOCKY_CLOUDS [clouds_minecrafty]
screen.rp_settings     = TEXTURE_FORMAT EMISSION_STRENGTH DIRECTIONAL_LIGHTMAPS DIRECTIONAL_LIGHTMAPS_INTENSITY POM_DEPTH POM_SAMPLES POM_SHADOW POM_SHADOW_SAMPLES
screen.reflections     = ENVIRONMENT_REFLECTIONS SKY_REFLECTIONS SSR_ROUGHNESS_SUPPORT <empty> SSR_RAY_COUNT SSR_INTERSECTION_STEPS_SMOOTH SSR_INTERSECTION_STEPS_ROUGH SSR_REFINEMENT_STEPS SSR_ROUGHNESS_THRESHOLD
screen.light_sources   = [sunlight_color] SUN_I [moonlight_color] MOON_I [blocklight_color] BLOCKLIGHT_I SKYLIGHT_I BOUNCED_LIGHT_I CAVE_LIGHTING_I NETHER_I
screen.shadows         = SHADOW SHADOW_PCF SHADOW_COLOR SHADOW_VPS shadowMapResolution shadowDistance sunPathRotation SHADOW_PENUMBRA_SCALE ENTITY_SHADOWS BLOCK_ENTITY_SHADOWS PIXELATED_SHADOWS PIXELATED_SHADOWS_RESOLUTION
screen.color_grading   = tonemap <empty> <empty> <empty> GRADE_BRIGHTNESS GRADE_CONTRAST GRADE_SATURATION GRADE_WHITE_BALANCE GRADE_ORANGE_SAT_BOOST GRADE_TEAL_SAT_BOOST GRADE_GREEN_SAT_BOOST GRADE_GREEN_HUE_SHIFT <empty> <empty> PURKINJE_SHIFT PURKINJE_SHIFT_INTENSITY
screen.exposure        = AUTO_EXPOSURE AUTO_EXPOSURE_BIAS AUTO_EXPOSURE_MIN AUTO_EXPOSURE_MAX AUTO_EXPOSURE_RATE_DIM_TO_BRIGHT AUTO_EXPOSURE_RATE_BRIGHT_TO_DIM <empty> <empty> MANUAL_EXPOSURE_VALUE MANUAL_EXPOSURE_USE_SCREEN_BRIGHTNESS <empty> <empty> HISTOGRAM_BINS HISTOGRAM_TARGET
screen.water_waves     = WATER_WAVES WATER_WAVE_ITERATIONS WATER_WAVE_STRENGTH WATER_WAVE_FREQUENCY WATER_WAVE_SPEED_STILL WATER_WAVE_SPEED_FLOWING WATER_WAVE_PERSISTENCE WATER_WAVE_LACUNARITY WATER_PARALLAX WATER_DISPLACEMENT
screen.water_fog_coeff = WATER_ABSORPTION_R WATER_ABSORPTION_G WATER_ABSORPTION_B WATER_SCATTERING <empty> WATER_ABSORPTION_R_UNDERWATER WATER_ABSORPTION_G_UNDERWATER WATER_ABSORPTION_B_UNDERWATER WATER_SCATTERING_UNDERWATER

screen.clouds_cumulus     = CLOUDS_CU_PRIMARY_STEPS_H CLOUDS_CU_PRIMARY_STEPS_Z CLOUDS_CU_LIGHTING_STEPS CLOUDS_CU_AMBIENT_STEPS CLOUDS_CU_ALTITUDE CLOUDS_CU_THICKNESS CLOUDS_CU_DENSITY CLOUDS_CU_COVERAGE CLOUDS_CU_SIZE <empty> CLOUDS_CU_DETAIL_STRENGTH CLOUDS_CU_CURL_STRENGTH CLOUDS_CU_WIND_SPEED CLOUDS_CU_WIND_ANGLE
screen.clouds_altocumulus = CLOUDS_AC_PRIMARY_STEPS_H CLOUDS_AC_PRIMARY_STEPS_Z CLOUDS_AC_LIGHTING_STEPS CLOUDS_AC_AMBIENT_STEPS CLOUDS_AC_ALTITUDE CLOUDS_AC_THICKNESS CLOUDS_AC_DENSITY CLOUDS_AC_COVERAGE CLOUDS_AC_SIZE <empty> CLOUDS_AC_DETAIL_STRENGTH CLOUDS_AC_CURL_STRENGTH CLOUDS_AC_WIND_SPEED CLOUDS_AC_WIND_ANGLE
screen.clouds_cirrus      = CLOUDS_CI_LIGHTING_STEPS CLOUDS_CI_ALTITUDE CLOUDS_CI_DENSITY CLOUDS_CC_DENSITY CLOUDS_CI_COVERAGE CLOUDS_CC_COVERAGE CLOUDS_CI_SIZE CLOUDS_CC_SIZE CLOUDS_CI_DETAIL_STRENGTH CLOUDS_CC_DETAIL_STRENGTH CLOUDS_CI_CURL_STRENGTH CLOUDS_CC_CURL_STRENGTH CLOUDS_CI_WIND_SPEED CLOUDS_CI_WIND_ANGLE
screen.clouds_minecrafty  = BLOCKY_CLOUDS_LAYER_2 BLOCKY_CLOUDS_THICKNESS BLOCKY_CLOUDS_ALTITUDE BLOCKY_CLOUDS_ALTITUDE_2 BLOCKY_CLOUDS_ROUNDNESS BLOCKY_CLOUDS_SHARPNESS

screen.fog_rlh = AIR_FOG_RAYLEIGH_DENSITY [fog_rlh_normal] AIR_FOG_RAYLEIGH_DENSITY_RAIN [fog_rlh_rain] AIR_FOG_RAYLEIGH_DENSITY_ARID [fog_rlh_arid] AIR_FOG_RAYLEIGH_DENSITY_SNOWY [fog_rlh_snowy] AIR_FOG_RAYLEIGH_DENSITY_TAIGA [fog_rlh_taiga] AIR_FOG_RAYLEIGH_DENSITY_JUNGLE [fog_rlh_jungle] AIR_FOG_RAYLEIGH_DENSITY_SWAMP [fog_rlh_swamp]
screen.fog_mie = AIR_FOG_MIE_DENSITY_MORNING AIR_FOG_MIE_DENSITY_NOON AIR_FOG_MIE_DENSITY_EVENING AIR_FOG_MIE_DENSITY_MIDNIGHT AIR_FOG_MIE_DENSITY_RAIN AIR_FOG_MIE_DENSITY_BLUE_HOUR

screen.fog_rlh_normal = AIR_FOG_RAYLEIGH_R AIR_FOG_RAYLEIGH_G AIR_FOG_RAYLEIGH_B
screen.fog_rlh_rain   = AIR_FOG_RAYLEIGH_R_RAIN AIR_FOG_RAYLEIGH_G_RAIN AIR_FOG_RAYLEIGH_B_RAIN
screen.fog_rlh_arid   = AIR_FOG_RAYLEIGH_R_ARID AIR_FOG_RAYLEIGH_G_ARID AIR_FOG_RAYLEIGH_B_ARID
screen.fog_rlh_snowy  = AIR_FOG_RAYLEIGH_R_SNOWY AIR_FOG_RAYLEIGH_G_SNOWY AIR_FOG_RAYLEIGH_B_SNOWY
screen.fog_rlh_taiga  = AIR_FOG_RAYLEIGH_R_TAIGA AIR_FOG_RAYLEIGH_G_TAIGA AIR_FOG_RAYLEIGH_B_TAIGA
screen.fog_rlh_jungle = AIR_FOG_RAYLEIGH_R_JUNGLE AIR_FOG_RAYLEIGH_G_JUNGLE AIR_FOG_RAYLEIGH_B_JUNGLE
screen.fog_rlh_swamp  = AIR_FOG_RAYLEIGH_R_SWAMP AIR_FOG_RAYLEIGH_G_SWAMP AIR_FOG_RAYLEIGH_B_SWAMP

screen.sunlight_color   = [sunlight_morning] [sunlight_noon] [sunlight_evening]
screen.moonlight_color  = MOON_R MOON_G MOON_B
screen.blocklight_color = BLOCKLIGHT_R BLOCKLIGHT_G BLOCKLIGHT_B

screen.sunlight_morning = SUN_MR SUN_MG SUN_MB
screen.sunlight_noon    = SUN_NR SUN_NG SUN_NB
screen.sunlight_evening = SUN_ER SUN_EG SUN_EB

screen.weather_d0  = WEATHER_D0_CLOUDS_CU_MIN WEATHER_D0_CLOUDS_CU_MAX WEATHER_D0_CLOUDS_AC_MIN WEATHER_D0_CLOUDS_AC_MAX WEATHER_D0_CLOUDS_CI WEATHER_D0_CLOUDS_CC WEATHER_D0_FOGGINESS
screen.weather_d1  = WEATHER_D1_CLOUDS_CU_MIN WEATHER_D1_CLOUDS_CU_MAX WEATHER_D1_CLOUDS_AC_MIN WEATHER_D1_CLOUDS_AC_MAX WEATHER_D1_CLOUDS_CI WEATHER_D1_CLOUDS_CC WEATHER_D1_FOGGINESS
screen.weather_d2  = WEATHER_D2_CLOUDS_CU_MIN WEATHER_D2_CLOUDS_CU_MAX WEATHER_D2_CLOUDS_AC_MIN WEATHER_D2_CLOUDS_AC_MAX WEATHER_D2_CLOUDS_CI WEATHER_D2_CLOUDS_CC WEATHER_D2_FOGGINESS
screen.weather_d3  = WEATHER_D3_CLOUDS_CU_MIN WEATHER_D3_CLOUDS_CU_MAX WEATHER_D3_CLOUDS_AC_MIN WEATHER_D3_CLOUDS_AC_MAX WEATHER_D3_CLOUDS_CI WEATHER_D3_CLOUDS_CC WEATHER_D3_FOGGINESS
screen.weather_d4  = WEATHER_D4_CLOUDS_CU_MIN WEATHER_D4_CLOUDS_CU_MAX WEATHER_D4_CLOUDS_AC_MIN WEATHER_D4_CLOUDS_AC_MAX WEATHER_D4_CLOUDS_CI WEATHER_D4_CLOUDS_CC WEATHER_D4_FOGGINESS
screen.weather_d5  = WEATHER_D5_CLOUDS_CU_MIN WEATHER_D5_CLOUDS_CU_MAX WEATHER_D5_CLOUDS_AC_MIN WEATHER_D5_CLOUDS_AC_MAX WEATHER_D5_CLOUDS_CI WEATHER_D5_CLOUDS_CC WEATHER_D5_FOGGINESS
screen.weather_d6  = WEATHER_D6_CLOUDS_CU_MIN WEATHER_D6_CLOUDS_CU_MAX WEATHER_D6_CLOUDS_AC_MIN WEATHER_D6_CLOUDS_AC_MAX WEATHER_D6_CLOUDS_CI WEATHER_D6_CLOUDS_CC WEATHER_D6_FOGGINESS
screen.weather_d7  = WEATHER_D7_CLOUDS_CU_MIN WEATHER_D7_CLOUDS_CU_MAX WEATHER_D7_CLOUDS_AC_MIN WEATHER_D7_CLOUDS_AC_MAX WEATHER_D7_CLOUDS_CI WEATHER_D7_CLOUDS_CC WEATHER_D7_FOGGINESS
screen.weather_d8  = WEATHER_D8_CLOUDS_CU_MIN WEATHER_D8_CLOUDS_CU_MAX WEATHER_D8_CLOUDS_AC_MIN WEATHER_D8_CLOUDS_AC_MAX WEATHER_D8_CLOUDS_CI WEATHER_D8_CLOUDS_CC WEATHER_D8_FOGGINESS
screen.weather_d9  = WEATHER_D9_CLOUDS_CU_MIN WEATHER_D9_CLOUDS_CU_MAX WEATHER_D9_CLOUDS_AC_MIN WEATHER_D9_CLOUDS_AC_MAX WEATHER_D9_CLOUDS_CI WEATHER_D9_CLOUDS_CC WEATHER_D9_FOGGINESS
screen.weather_d10 = WEATHER_D10_CLOUDS_CU_MIN WEATHER_D10_CLOUDS_CU_MAX WEATHER_D10_CLOUDS_AC_MIN WEATHER_D10_CLOUDS_AC_MAX WEATHER_D10_CLOUDS_CI WEATHER_D10_CLOUDS_CC WEATHER_D10_FOGGINESS
screen.weather_d11 = WEATHER_D11_CLOUDS_CU_MIN WEATHER_D11_CLOUDS_CU_MAX WEATHER_D11_CLOUDS_AC_MIN WEATHER_D11_CLOUDS_AC_MAX WEATHER_D11_CLOUDS_CI WEATHER_D11_CLOUDS_CC WEATHER_D11_FOGGINESS

# Columns
screen.sunlight_color.columns   = 1
screen.moonlight_color.columns  = 1
screen.blocklight_color.columns = 1
screen.sunlight_noon.columns    = 1
screen.sunlight_morning.columns = 1
screen.sunlight_evening.columns = 1
screen.blocklight_color.columns = 1
screen.reflections.columns      = 1
screen.fog_rlh_normal.columns   = 1
screen.fog_rlh_rain.columns     = 1
screen.fog_rlh_arid.columns     = 1
screen.fog_rlh_snowy.columns    = 1
screen.fog_rlh_taiga.columns    = 1
screen.fog_rlh_jungle.columns   = 1
screen.fog_rlh_swamp.columns    = 1
screen.water_fog_coeff.columns  = 1
screen.weather.columns          = 1
screen.weather_d0.columns       = 1
screen.weather_d1.columns       = 1
screen.weather_d2.columns       = 1
screen.weather_d3.columns       = 1
screen.weather_d4.columns       = 1
screen.weather_d5.columns       = 1
screen.weather_d6.columns       = 1
screen.weather_d7.columns       = 1
screen.weather_d8.columns       = 1
screen.weather_d9.columns       = 1
screen.weather_d10.columns      = 1
screen.weather_d11.columns      = 1

# Sliders
sliders = TAAU_RENDER_SCALE CAS_INTENSITY VIGNETTE_INTENSITY PURKINJE_SHIFT_INTENSITY GRADE_BRIGHTNESS GRADE_CONTRAST GRADE_SATURATION GRADE_WHITE_BALANCE GRADE_ORANGE_SAT_BOOST GRADE_TEAL_SAT_BOOST GRADE_GREEN_SAT_BOOST GRADE_GREEN_HUE_SHIFT shadowMapResolution shadowDistance sunPathRotation SHADOW_PENUMBRA_SCALE AUTO_EXPOSURE_BIAS AUTO_EXPOSURE_MIN AUTO_EXPOSURE_MAX AUTO_EXPOSURE_RATE_DIM_TO_BRIGHT AUTO_EXPOSURE_RATE_BRIGHT_TO_DIM MANUAL_EXPOSURE_VALUE HISTOGRAM_BINS HISTOGRAM_TARGET AIR_FOG_RAYLEIGH_DENSITY AIR_FOG_RAYLEIGH_R AIR_FOG_RAYLEIGH_G AIR_FOG_RAYLEIGH_B AIR_FOG_RAYLEIGH_DENSITY_RAIN AIR_FOG_RAYLEIGH_R_RAIN AIR_FOG_RAYLEIGH_G_RAIN AIR_FOG_RAYLEIGH_B_RAIN AIR_FOG_RAYLEIGH_DENSITY_ARID AIR_FOG_RAYLEIGH_R_ARID AIR_FOG_RAYLEIGH_G_ARID AIR_FOG_RAYLEIGH_B_ARID AIR_FOG_RAYLEIGH_DENSITY_SNOWY AIR_FOG_RAYLEIGH_R_SNOWY AIR_FOG_RAYLEIGH_G_SNOWY AIR_FOG_RAYLEIGH_B_SNOWY AIR_FOG_RAYLEIGH_DENSITY_TAIGA AIR_FOG_RAYLEIGH_R_TAIGA AIR_FOG_RAYLEIGH_G_TAIGA AIR_FOG_RAYLEIGH_B_TAIGA AIR_FOG_RAYLEIGH_DENSITY_JUNGLE AIR_FOG_RAYLEIGH_R_JUNGLE AIR_FOG_RAYLEIGH_G_JUNGLE AIR_FOG_RAYLEIGH_B_JUNGLE AIR_FOG_RAYLEIGH_DENSITY_SWAMP AIR_FOG_RAYLEIGH_R_SWAMP AIR_FOG_RAYLEIGH_G_SWAMP AIR_FOG_RAYLEIGH_B_SWAMP BLOOM_INTENSITY DOF_INTENSITY DOF_SAMPLES DOF_FOCUS AIR_FOG_MIE_DENSITY_MORNING AIR_FOG_MIE_DENSITY_NOON AIR_FOG_MIE_DENSITY_RAIN AIR_FOG_MIE_DENSITY_BLUE_HOUR AIR_FOG_MIE_DENSITY_EVENING AIR_FOG_MIE_DENSITY_MIDNIGHT VL_RENDER_SCALE BLOOMY_FOG_INTENSITY SUN_ANGULAR_RADIUS MOON_ANGULAR_RADIUS STARS_INTENSITY STARS_COVERAGE SEA_LEVEL POM_DEPTH POM_SAMPLES POM_SHADOW_SAMPLES EMISSION_STRENGTH POM_DISTANCE RAIN_OPACITY SSR_RAY_COUNT SSR_INTERSECTION_STEPS_SMOOTH SSR_INTERSECTION_STEPS_ROUGH SSR_REFINEMENT_STEPS SSR_ROUGHNESS_THRESHOLD WATER_WAVE_ITERATIONS WATER_WAVE_STRENGTH WATER_WAVE_FREQUENCY WATER_WAVE_SPEED_STILL WATER_WAVE_SPEED_FLOWING WATER_WAVE_PERSISTENCE WATER_WAVE_LACUNARITY WATER_ABSORPTION_R WATER_ABSORPTION_G WATER_ABSORPTION_B WATER_SCATTERING WATER_ABSORPTION_R_UNDERWATER WATER_ABSORPTION_G_UNDERWATER WATER_ABSORPTION_B_UNDERWATER WATER_SCATTERING_UNDERWATER SUN_I MOON_R MOON_G MOON_B MOON_I BLOCKLIGHT_R BLOCKLIGHT_G BLOCKLIGHT_B BLOCKLIGHT_I SKYLIGHT_I BOUNCED_LIGHT_I CAVE_LIGHTING_I CUSTOM_SKY_BRIGHTNESS DIRECTIONAL_LIGHTMAPS_INTENSITY MOTION_BLUR_INTENSITY CLOUDS_CU_PRIMARY_STEPS_H CLOUDS_CU_PRIMARY_STEPS_Z CLOUDS_CU_LIGHTING_STEPS CLOUDS_CU_AMBIENT_STEPS CLOUDS_CU_ALTITUDE CLOUDS_CU_THICKNESS CLOUDS_CU_DENSITY CLOUDS_CU_COVERAGE CLOUDS_CU_SIZE CLOUDS_CU_DETAIL_STRENGTH CLOUDS_CU_CURL_STRENGTH CLOUDS_CU_WIND_SPEED CLOUDS_CU_WIND_ANGLE CLOUDS_AC_PRIMARY_STEPS_H CLOUDS_AC_PRIMARY_STEPS_Z CLOUDS_AC_LIGHTING_STEPS CLOUDS_AC_AMBIENT_STEPS CLOUDS_AC_ALTITUDE CLOUDS_AC_THICKNESS CLOUDS_AC_DENSITY CLOUDS_AC_COVERAGE CLOUDS_AC_SIZE CLOUDS_AC_DETAIL_STRENGTH CLOUDS_AC_ACRL_STRENGTH CLOUDS_AC_WIND_SPEED CLOUDS_AC_WIND_ANGLE CLOUDS_CI_LIGHTING_STEPS CLOUDS_CI_ALTITUDE CLOUDS_CI_DENSITY CLOUDS_CI_COVERAGE CLOUDS_CI_SIZE CLOUDS_CI_WIND_SPEED CLOUDS_CI_WIND_ANGLE CLOUDS_CI_DETAIL_STRENGTH CLOUDS_CI_CURL_STRENGTH CLOUDS_CC_COVERAGE CLOUDS_CC_SIZE CLOUDS_CC_DETAIL_STRENGTH CLOUDS_CC_CURL_STRENGTH WEATHER_D0_CLOUDS_CU_MIN WEATHER_D0_CLOUDS_CU_MAX WEATHER_D0_CLOUDS_AC_MIN WEATHER_D0_CLOUDS_AC_MAX WEATHER_D0_CLOUDS_CI WEATHER_D0_CLOUDS_CC WEATHER_D0_FOGGINESS WEATHER_D1_CLOUDS_CU_MIN WEATHER_D1_CLOUDS_CU_MAX WEATHER_D1_CLOUDS_AC_MIN WEATHER_D1_CLOUDS_AC_MAX WEATHER_D1_CLOUDS_CI WEATHER_D1_CLOUDS_CC WEATHER_D1_FOGGINESS WEATHER_D2_CLOUDS_CU_MIN WEATHER_D2_CLOUDS_CU_MAX WEATHER_D2_CLOUDS_AC_MIN WEATHER_D2_CLOUDS_AC_MAX WEATHER_D2_CLOUDS_CI WEATHER_D2_CLOUDS_CC WEATHER_D2_FOGGINESS WEATHER_D3_CLOUDS_CU_MIN WEATHER_D3_CLOUDS_CU_MAX WEATHER_D3_CLOUDS_AC_MIN WEATHER_D3_CLOUDS_AC_MAX WEATHER_D3_CLOUDS_CI WEATHER_D3_CLOUDS_CC WEATHER_D3_FOGGINESS WEATHER_D4_CLOUDS_CU_MIN WEATHER_D4_CLOUDS_CU_MAX WEATHER_D4_CLOUDS_AC_MIN WEATHER_D4_CLOUDS_AC_MAX WEATHER_D4_CLOUDS_CI WEATHER_D4_CLOUDS_CC WEATHER_D4_FOGGINESS WEATHER_D5_CLOUDS_CU_MIN WEATHER_D5_CLOUDS_CU_MAX WEATHER_D5_CLOUDS_AC_MIN WEATHER_D5_CLOUDS_AC_MAX WEATHER_D5_CLOUDS_CI WEATHER_D5_CLOUDS_CC WEATHER_D5_FOGGINESS WEATHER_D6_CLOUDS_CU_MIN WEATHER_D6_CLOUDS_CU_MAX WEATHER_D6_CLOUDS_AC_MIN WEATHER_D6_CLOUDS_AC_MAX WEATHER_D6_CLOUDS_CI WEATHER_D6_CLOUDS_CC WEATHER_D6_FOGGINESS WEATHER_D7_CLOUDS_CU_MIN WEATHER_D7_CLOUDS_CU_MAX WEATHER_D7_CLOUDS_AC_MIN WEATHER_D7_CLOUDS_AC_MAX WEATHER_D7_CLOUDS_CI WEATHER_D7_CLOUDS_CC WEATHER_D7_FOGGINESS WEATHER_D8_CLOUDS_CU_MIN WEATHER_D8_CLOUDS_CU_MAX WEATHER_D8_CLOUDS_AC_MIN WEATHER_D8_CLOUDS_AC_MAX WEATHER_D8_CLOUDS_CI WEATHER_D8_CLOUDS_CC WEATHER_D8_FOGGINESS WEATHER_D9_CLOUDS_CU_MIN WEATHER_D9_CLOUDS_CU_MAX WEATHER_D9_CLOUDS_AC_MIN WEATHER_D9_CLOUDS_AC_MAX WEATHER_D9_CLOUDS_CI WEATHER_D9_CLOUDS_CC WEATHER_D9_FOGGINESS WEATHER_D10_CLOUDS_CU_MIN WEATHER_D10_CLOUDS_CU_MAX WEATHER_D10_CLOUDS_AC_MIN WEATHER_D10_CLOUDS_AC_MAX WEATHER_D10_CLOUDS_CI WEATHER_D10_CLOUDS_CC WEATHER_D10_FOGGINESS WEATHER_D11_CLOUDS_CU_MIN WEATHER_D11_CLOUDS_CU_MAX WEATHER_D11_CLOUDS_AC_MIN WEATHER_D11_CLOUDS_AC_MAX WEATHER_D11_CLOUDS_CI WEATHER_D11_CLOUDS_CC WEATHER_D11_FOGGINESS WEATHER_DAY CLOUDS_CC_DENSITY NETHER_I NETHER_FOG_INTENSITY CLOUDS_TEMPORAL_UPSCALING SSS_INTENSITY SHADING_STRENGTH WATER_REFRACTION_INTENSITY BLOCKY_CLOUDS_THICKNESS BLOCKY_CLOUDS_ALTITUDE BLOCKY_CLOUDS_ALTITUDE_2 BLOCKY_CLOUDS_ROUNDNESS BLOCKY_CLOUDS_SHARPNESS EDGE_HIGHLIGHT_SCALE SUN_MR SUN_MG SUN_MB SUN_NR SUN_NG SUN_NB SUN_ER SUN_EG SUN_EB PIXELATED_SHADOWS_RESOLUTION

#--------------------------------------------------------------------------------------------------#

clouds              = off
dynamicHandLight    = true
oldHandLight        = false
oldLighting         = false
separateAo          = true
separateEntityDraws = true
underwaterOverlay   = false
vignette            = false

#ifndef ENTITY_SHADOWS
shadowEntities = false
#endif

#ifndef BLOCK_ENTITY_SHADOWS
shadowBlockEntities = false
#endif

# -------------------
#   Program Toggles
# -------------------

program.world0/shadow.enabled      = SHADOW
program.world0/composite.enabled   = VL
program.world0/composite2.enabled  = DOF
program.world0/composite3.enabled  = TAAU
program.world0/composite5.enabled  = BLOOM
program.world0/composite6.enabled  = BLOOM
program.world0/composite7.enabled  = BLOOM
program.world0/composite8.enabled  = BLOOM
program.world0/composite9.enabled  = BLOOM
program.world0/composite10.enabled = BLOOM
program.world0/composite11.enabled = BLOOM
program.world0/composite12.enabled = BLOOM
program.world0/composite13.enabled = BLOOM
program.world0/composite15.enabled = MOTION_BLUR
program.world0/composite16.enabled = FXAA

program.world-1/composite.enabled   = VL
program.world-1/composite2.enabled  = DOF
program.world-1/composite3.enabled  = TAAU
program.world-1/composite5.enabled  = BLOOM
program.world-1/composite6.enabled  = BLOOM
program.world-1/composite7.enabled  = BLOOM
program.world-1/composite8.enabled  = BLOOM
program.world-1/composite9.enabled  = BLOOM
program.world-1/composite10.enabled = BLOOM
program.world-1/composite11.enabled = BLOOM
program.world-1/composite12.enabled = BLOOM
program.world-1/composite13.enabled = BLOOM
program.world-1/composite15.enabled = MOTION_BLUR
program.world-1/composite16.enabled = FXAA

# ----------------
#   Buffer Flips
# ----------------

flip.deferred2.colortex5 = true

#ifdef VL
flip.composite1.colortex6 = true
flip.composite1.colortex7 = true
#endif

#ifdef TAAU
flip.composite4.colortex6 = true
flip.composite4.colortex7 = true
#endif

# ----------------
#   Buffer Sizes
# ----------------

size.buffer.colortex4 = 192 108

# ------------
#   Blending
# ------------

alphaTest.gbuffers_armor_glint           = off
alphaTest.gbuffers_basic                 = off
alphaTest.gbuffers_block                 = off
alphaTest.gbuffers_damagedblock          = off
alphaTest.gbuffers_entities              = off
alphaTest.gbuffers_hand                  = off
alphaTest.gbuffers_hand_water            = off
alphaTest.gbuffers_line                  = off
alphaTest.gbuffers_particles             = off
alphaTest.gbuffers_spidereyes            = off
alphaTest.gbuffers_terrain               = off
alphaTest.gbuffers_textured              = off
alphaTest.gbuffers_block_translucent     = off
alphaTest.gbuffers_entities_translucent  = off
alphaTest.gbuffers_particles_translucent = off
alphaTest.gbuffers_water                 = off
alphaTest.gbuffers_weather               = off
alphaTest.shadow                         = off

blend.gbuffers_armor_glint           = off
blend.gbuffers_basic                 = off
blend.gbuffers_block                 = off
blend.gbuffers_entities              = off
blend.gbuffers_hand                  = off
blend.gbuffers_hand_water            = off
blend.gbuffers_line                  = off
blend.gbuffers_particles             = off
blend.gbuffers_spidereyes            = off
blend.gbuffers_skytextured           = off
blend.gbuffers_terrain               = off
blend.gbuffers_textured              = off
blend.gbuffers_block_translucent     = off
blend.gbuffers_entities_translucent  = off
blend.gbuffers_particles_translucent = off
blend.gbuffers_water                 = off
blend.gbuffers_weather               = off
blend.shadow                         = off

#ifndef IS_IRIS
blend.gbuffers_damagedblock          = off
#endif

blend.gbuffers_armor_glint.colortex0           = ONE ONE ONE ZERO
blend.gbuffers_water.colortex0                 = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_weather.colortex0               = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_hand_water.colortex0            = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_textured.colortex0              = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_entities_translucent.colortex0  = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_block_translucent.colortex0     = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_particles_translucent.colortex0 = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO

# -------------------
#   Custom Textures
# -------------------

texture.noise = image/noise.png

# atmospheric scattering LUT
texture.deferred.depthtex0 = image/atmosphere/scattering.dat TEXTURE_3D RGB16F 32 64 32 RGB HALF_FLOAT

# 3D noise for clouds
texture.deferred.colortex6.1 = image/worley_noise.dat TEXTURE_3D R8 64 64 64 RED UNSIGNED_BYTE
texture.deferred.colortex7.1 = image/curl_noise.dat TEXTURE_3D RGB8 32 32 32 RGB UNSIGNED_BYTE

# 3D noise for fog
texture.composite.colortex0 = image/worley_noise.dat TEXTURE_3D R8 64 64 64 RED UNSIGNED_BYTE

# tony mcmapface LUT
texture.composite.colortex1.1 = image/tony_mcmapface_lut_f16.dat TEXTURE_3D RGB16F 48 48 48 RGB HALF_FLOAT

# minecraft clouds texture
#ifdef BLOCKY_CLOUDS
texture.deferred.depthtex2 = minecraft:textures/environment/clouds.png
#endif

# -------------------
#   Custom Uniforms
# -------------------

uniform.vec2.view_res = vec2(viewWidth, viewHeight)
uniform.vec2.view_pixel_size = vec2(1.0 / viewWidth, 1.0 / viewHeight)

# TAA jitter offset using R2 sequence
# http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/
variable.float.jitter_x = frac(1.3247179572 * frameCounter + 0.5) * 2.0 - 1.0
variable.float.jitter_y = frac(1.7548776662 * frameCounter + 0.5) * 2.0 - 1.0
uniform.vec2.taa_offset = vec2(jitter_x / viewWidth, jitter_y / viewWidth)

# Lighting uniforms

uniform.float.eye_blocklight = smooth(eyeBrightness.x / 240.0, 1.0, 1.0)
uniform.float.eye_skylight   = smooth(eyeBrightness.y / 240.0, 1.0, 1.0)

variable.float.view_up_dir_norm = 1.0 / sqrt((upPosition.x * upPosition.x) + (upPosition.y * upPosition.y) + (upPosition.z * upPosition.z))
variable.float.view_up_dir_x = upPosition.x * view_up_dir_norm
variable.float.view_up_dir_y = upPosition.y * view_up_dir_norm
variable.float.view_up_dir_z = upPosition.z * view_up_dir_norm
uniform.vec3.view_up_dir = vec3(view_up_dir_x, view_up_dir_y, view_up_dir_z)

variable.float.view_sun_dir_norm = 1.0 / sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
variable.float.view_sun_dir_x = sunPosition.x * view_sun_dir_norm
variable.float.view_sun_dir_y = sunPosition.y * view_sun_dir_norm
variable.float.view_sun_dir_z = sunPosition.z * view_sun_dir_norm
uniform.vec3.view_sun_dir = vec3(view_sun_dir_x, view_sun_dir_y, view_sun_dir_z)

variable.float.sun_dir_x = gbufferModelViewInverse.0.0 * view_sun_dir_x + gbufferModelViewInverse.1.0 * view_sun_dir_y + gbufferModelViewInverse.2.0 * view_sun_dir_z
variable.float.sun_dir_y = gbufferModelViewInverse.0.1 * view_sun_dir_x + gbufferModelViewInverse.1.1 * view_sun_dir_y + gbufferModelViewInverse.2.1 * view_sun_dir_z
variable.float.sun_dir_z = gbufferModelViewInverse.0.2 * view_sun_dir_x + gbufferModelViewInverse.1.2 * view_sun_dir_y + gbufferModelViewInverse.2.2 * view_sun_dir_z
uniform.vec3.sun_dir = vec3(sun_dir_x, sun_dir_y, sun_dir_z)

variable.float.view_moon_dir_norm = 1.0 / sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
variable.float.view_moon_dir_x = moonPosition.x * view_moon_dir_norm
variable.float.view_moon_dir_y = moonPosition.y * view_moon_dir_norm
variable.float.view_moon_dir_z = moonPosition.z * view_moon_dir_norm
uniform.vec3.view_moon_dir = vec3(view_moon_dir_x, view_moon_dir_y, view_moon_dir_z)

variable.float.moon_dir_x = gbufferModelViewInverse.0.0 * view_moon_dir_x + gbufferModelViewInverse.1.0 * view_moon_dir_y + gbufferModelViewInverse.2.0 * view_moon_dir_z
variable.float.moon_dir_y = gbufferModelViewInverse.0.1 * view_moon_dir_x + gbufferModelViewInverse.1.1 * view_moon_dir_y + gbufferModelViewInverse.2.1 * view_moon_dir_z
variable.float.moon_dir_z = gbufferModelViewInverse.0.2 * view_moon_dir_x + gbufferModelViewInverse.1.2 * view_moon_dir_y + gbufferModelViewInverse.2.2 * view_moon_dir_z
uniform.vec3.moon_dir = vec3(moon_dir_x, moon_dir_y, moon_dir_z)

variable.float.view_light_dir_x = if(sunAngle < 0.5, view_sun_dir_x, view_moon_dir_x)
variable.float.view_light_dir_y = if(sunAngle < 0.5, view_sun_dir_y, view_moon_dir_y)
variable.float.view_light_dir_z = if(sunAngle < 0.5, view_sun_dir_z, view_moon_dir_z)
uniform.vec3.view_light_dir = vec3(view_light_dir_x, view_light_dir_y, view_light_dir_z)

variable.float.light_dir_x = if(sunAngle < 0.5, sun_dir_x, moon_dir_x)
variable.float.light_dir_y = if(sunAngle < 0.5, sun_dir_y, moon_dir_y)
variable.float.light_dir_z = if(sunAngle < 0.5, sun_dir_z, moon_dir_z)
uniform.vec3.light_dir = vec3(light_dir_x, light_dir_y, light_dir_z)

# Time uniforms

uniform.float.me_fade      = if(sun_dir_y < 0.18, 0.37 + 1.2 * max(0.0, -sun_dir_y), 1.7)
uniform.float.me_weight    = pow(clamp(1.0 - me_fade * abs(sun_dir_y - 0.18), 0.0, 1.0), 2.0)
uniform.float.time_sunrise  = if(sun_dir_x > 0.0, 1.0, 0.0) * me_weight
uniform.float.time_noon     = if(sun_dir_y > 0.0, 1.0, 0.0) * (1.0 - me_weight)
uniform.float.time_midnight = if(sun_dir_y < 0.0, 1.0, 0.0) * (1.0 - me_weight)
uniform.float.time_sunset   = if(sun_dir_x < 0.0, 1.0, 0.0) * me_weight

#uniform.float.time_noon_old     = max(1.0 - pow(abs(1.0 - worldTime / 6000.0), 5.0), 0.0)
#uniform.float.time_midnight_old = max(1.0 - pow(abs(3.0 - worldTime / 6000.0), 1.0), 0.0)
#uniform.float.time_sunrise_old  = (1.0 - time_noon_old) * (1.0 - time_midnight_old) * if(between(worldTime, 6000, 18000), 0.0, 1.0)
#uniform.float.time_sunset_old   = (1.0 - time_noon_old) * (1.0 - time_midnight_old) * if(between(worldTime, 6000, 18000), 1.0, 0.0)

# World age in seconds, repeating every 128 days. This is used for animating atmospherics
uniform.float.world_age = ((worldDay % 128) * 24000.0 + worldTime) / 20.0

# Detect whether world age has drastically changed since the last frame
variable.float.world_age_delta = abs(world_age - smooth(world_age, 0.1, 0.1))
uniform.bool.world_age_changed = world_age_delta > 1.0

uniform.float.lightning_flash_iris = smooth(if(lightningBoltPosition.w > 0.5, 1.0, 0.0), 0.0, 0.75)
uniform.float.lightning_flash_of = smooth(if(equals(skyColor.r, skyColor.g, 0.01) && skyColor.r > 0.3, 1.0, 0.0), 0.0, 0.75)

# Biome uniforms

uniform.float.biome_cave        = smooth(clamp((63.0 - eyeAltitude) / (63.0 - 50.0), 0.0, 1.0) * (1.0 - eyeBrightness.y / 240.0), 5.0, 2.0)
uniform.float.biome_arid        = smooth(if(biome_category == CAT_DESERT || biome_category == CAT_MESA || biome_category == CAT_SAVANNA, 1.0, 0.0), 30, 30)
uniform.float.biome_snowy       = smooth(if(biome_category == CAT_ICY, 1.0, 0.0), 30, 30)
uniform.float.biome_taiga       = smooth(if(biome_category == CAT_TAIGA, 1.0, 0.0), 30, 30)
uniform.float.biome_jungle      = smooth(if(biome_category == CAT_JUNGLE, 1.0, 0.0), 30, 30)
uniform.float.biome_swamp       = smooth(if(biome_category == CAT_SWAMP, 1.0, 0.0), 30, 30)
uniform.float.biome_temperate   = 1.0 - biome_arid - biome_snowy - biome_taiga - biome_jungle - biome_swamp
uniform.float.biome_may_rain    = smooth(if(biome_precipitation == PPT_RAIN, 1.0, 0.0), 30, 30)
uniform.float.biome_may_snow    = smooth(if(biome_precipitation == PPT_SNOW, 1.0, 0.0), 30, 30)
uniform.float.biome_temperature = smooth(temperature * 2.0 - 1.0, 1000, 1000)
uniform.float.biome_humidity    = smooth(rainfall * 2.0 - 1.0, 1000, 1000)
